#pragma once

#include "includelib.h"

namespace FST
{
	struct RELATION	   // ребро :символ->вершина графа переходов КА
	{
		unsigned char symbol;	// символ перехода
		short nnode;	// номер смежной вершины
		RELATION( unsigned char с = 0x00,  // символ перехода
			short ns = NULL);   // новое состояние												
	};
	struct NODE // вершина графа переходов
	{
		short n_relation;	// количество инциндентных ребер
		RELATION *relations;	// инцидентные ребра
		NODE();
		NODE(
			short n,	// количество инциндентных ребер
			RELATION rel, ...	// список ребер
		);
	};
	struct FST
	{
		unsigned char* string;		//цепочка (строка, завершатся 0x00 ) 
		short position;		//текущая позиция в цепочке 
		short nstates;		//количество состояний автомата
		NODE* nodes;		//граф переходов: [0] -начальное состояние, [nstate-1]-конечное
		short* rstates;		//возможные состояния автомата на данной позиции
		FST( 
			const unsigned  char* s,		//цепочка (строка, завершатся 0x00 ) 
			short ns,		//количество состояний автомата 
			NODE n, ...		//список состояний (граф переходов)
		);
		FST(
			short ns,		//количество состояний автомата 
			NODE n, ...		//список состояний (граф переходов)
		);
		FST() {}
	};
	bool execute(		// выполнить распознавание цепочки 
		FST& fst		//недетерминировнный конечный автомат
	);
};
